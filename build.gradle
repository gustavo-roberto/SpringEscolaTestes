plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
}

apply plugin: "jacoco"
jacoco {
	toolVersion = "0.8.5"
}

jacocoTestReport {
	dependsOn test

	reports {
		xml.enabled true
		csv.enabled false
		html.destination file("${buildDir}/reports/jacocoHtml")
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"com/itau/escolaItauSpring/**/EscolaItauSpringApplication.class",
					"com/itau/escolaItauSpring/dto/*",
					"**/config/*"
			])
		}))
	}
}

test {
	jacoco {
		destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
		includes= ["com.itau.escolaItauSpring.*"]
		classDumpDir = file("$buildDir/jacoco/classpathdumps")
	}

	finalizedBy jacocoTestReport

}
group = 'com.itau'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.projectlombok:lombok:1.18.22'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.mapstruct:mapstruct:1.5.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
}

tasks.named('test') {
	useJUnitPlatform()
}
